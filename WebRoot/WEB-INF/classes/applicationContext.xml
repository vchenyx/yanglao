<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context" 
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context 
       		http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task 
            http://www.springframework.org/schema/task/spring-task-3.0.xsd">
            
    <!-- 自动搜索除了@Controller标注的类  -->  
 	<context:component-scan base-package="com.jinkun.init" />
 	<context:component-scan base-package="com.jinkun.interceptor" />      
    <context:component-scan base-package="com.common.service.impl" />
	<context:component-scan base-package="com.jinkun.main.service.impl" />
	<context:component-scan base-package="com.jinkun.main.cache.impl" />
	<context:component-scan base-package="com.jinkun.health.service.impl" />
	
	
	<context:property-placeholder location="classpath:webconfig.properties" ignore-unresolvable="true"/>
	
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
	    <property name="initialPoolSize" value="20"/>
	    <!--连接池中保留的最大连接数。Default: 15 -->
	    <property name="maxPoolSize" value="50"/>
	    <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
	    <property name="maxIdleTime" value="1800"/>
	</bean>
	
	<!-- 本地数据源 -->
	<bean id="dataSource" parent="parentDataSource">
		<property name="driverClass" value="${local.driverClassName}" />
		<property name="jdbcUrl" value="${local.url}"/>
	    <property name="user" value="${local.username}"/>
	    <property name="password" value="${local.password}"/>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
            <list>
                <value>com/jinkun/beans</value>
            </list>
        </property>
        <property name="hibernateProperties">
			<props>
				<!-- 制定Hibernate的连接方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 是否显示更多的sql语句 -->
				<prop key="hibernate.show_sql">false</prop>
				<!-- 是否根据Hibernate映射创建数据表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="connection.autoReconnect">true</prop>
				<prop key="connection.failOverReadOnly">false</prop>
				<prop key="connection.maxReconnects">1000</prop>
				<prop key="connection.autoReconnectForPools">true</prop>
				<prop key="connection.is-connection-validation-required">true</prop> 
				 
				<!-- 开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 启用查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置二级缓存提供商 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<!-- 加载缓存所需配置文件 -->  
                <prop key="hibernate.net.sf.ehcache.configurationResourceName">classpath:ehcache.xml</prop>
				
			</props>
		</property>
		<property name="configLocations">
			<list>
				<value>classpath*:hibernate.cfg.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 使用Hibernate模板，极大简化Hibernate的开发 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="cacheQueries" value="true" />
    </bean>
    
    
	<!--开启自动代理功能 true使用CGLIB   -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- 配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!--配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<!-- 指定哪些方法需要加入事务，这里懒惰一下全部加入，可以使用通配符来只加入需要的方法 --> 
			<!-- 对增、删、改方法进行事务支持 -->
			<tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="create*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="upd*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="edit*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED"  rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED"  rollback-for="Exception" />
			<!-- 对查找方法进行只读事务 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="look*" propagation="REQUIRED" read-only="true" />
			<tx:method name="show*" propagation="REQUIRED" read-only="true" />
			<tx:method name="display*" propagation="REQUIRED" read-only="true" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
			<tx:method name="error*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!--开启注解式事务扫描 要开启事务的service实现类中 加上@Transactional注解-->
	<tx:annotation-driven />
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
 	<context:annotation-config />
	
	<import resource="classpath*:CommonDao.xml" />
	<import resource="classpath*:Service.xml" />
	<import resource="classpath*:spring-redis.xml" />
	<!-- <import resource="classpath*:applicationContext-mina.xml" /> -->
	<import resource="classpath*:httpClient.xml" />

<!--  	<import resource="classpath*:spring-redis-cluster.xml" />
 --> 	
</beans>

 